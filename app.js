const mangaData = [
    {
        id: '1',
        title: '–ù–∞—Ä—É—Ç–æ',
        author: '–ú–∞—Å–∞—à—ñ –ö—ñ—à–∏–º–æ—Ç–æ',
        price: 299.99,
        description: '–ï–ø—ñ—á–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è –ø—Ä–æ –º–æ–ª–æ–¥–æ–≥–æ –Ω—ñ–Ω–¥–∑—é, —è–∫–∏–π –ø—Ä–∞–≥–Ω–µ —Å—Ç–∞—Ç–∏ –•–æ–∫–∞–≥–µ.',
        image_url: 'https://images.unsplash.com/photo-1705831156575-a5294d295a31?crop=entropy&cs=srgb&fm=jpg&ixid=M3w3NDQ2MzR8MHwxfHNlYXJjaHwyfHxtYW5nYXxlbnwwfHx8fDE3NTMwMzczNTR8MA&ixlib=rb-4.1.0&q=85',
        genre: '–ü—Ä–∏–≥–æ–¥–∏',
        volumes: 72,
        rating: 4.8
    },
    {
        id: '2',
        title: '–ê—Ç–∞–∫–∞ –¢–∏—Ç–∞–Ω—ñ–≤',
        author: '–•–∞–π–¥–∂–∏–º–µ –Ü—Å–∞—è–º–∞',
        price: 349.99,
        description: '–¢–µ–º–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è –ø—Ä–æ –≤–∏–∂–∏–≤–∞–Ω–Ω—è –ª—é–¥—Å—Ç–≤–∞ –ø—Ä–æ—Ç–∏ –≥—ñ–≥–∞–Ω—Ç—Å—å–∫–∏—Ö —Ç–∏—Ç–∞–Ω—ñ–≤.',
        image_url: 'https://images.unsplash.com/photo-1531501410720-c8d437636169?crop=entropy&cs=srgb&fm=jpg&ixid=M3w3NDQ2MzR8MHwxfHNlYXJjaHwxfHxtYW5nYXxlbnwwfHx8fDE3NTMwMzczNTR8MA&ixlib=rb-4.1.0&q=85',
        genre: '–î—Ä–∞–º–∞',
        volumes: 34,
        rating: 4.9
    },
    {
        id: '3',
        title: '–ó–æ—à–∏—Ç –°–º–µ—Ä—Ç—ñ',
        author: '–¶—É–≥—É–º—ñ –û–±–∞',
        price: 279.99,
        description: '–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∏–π —Ç—Ä–∏–ª–µ—Ä –ø—Ä–æ —à–∫–æ–ª—è—Ä–∞, —è–∫–∏–π –∑–Ω–∞—Ö–æ–¥–∏—Ç—å –∑–æ—à–∏—Ç, —â–æ –≤–±–∏–≤–∞—î –ª—é–¥–µ–π.',
        image_url: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_ILmcMG-pEhh63Yt33irZW6Jv3KsMcE5K5A&s',
        genre: '–î–µ—Ç–µ–∫—Ç–∏–≤',
        volumes: 12,
        rating: 4.7
    },
    {
        id: '4',
        title: '–ö–ª–∏–Ω–æ–∫, —â–æ –∑–Ω–∏—â—É—î –¥–µ–º–æ–Ω—ñ–≤',
        author: '–ö–æ–π–æ—Ö–∞—Ä—É –ì–æ—Ç–æ–≥–µ',
        price: 319.99,
        description: '–ü—Ä–∏–≥–æ–¥–Ω–∏—Ü—å–∫–∞ —Ñ–µ–Ω—Ç–µ–∑—ñ –ø—Ä–æ –º–∏—Å–ª–∏–≤—Ü—è –Ω–∞ –¥–µ–º–æ–Ω—ñ–≤, —è–∫–∏–π —à—É–∫–∞—î –ª—ñ–∫–∏ –¥–ª—è —Å–≤–æ—î—ó —Å–µ—Å—Ç—Ä–∏.',
        image_url: 'https://uaserials.com/posters/7921.jpg',
        genre: '–§–µ–Ω—Ç–µ–∑—ñ',
        volumes: 23,
        rating: 4.9
    },
    {
        id: '5',
        title: '–ë–µ—Ä—Å–µ—Ä–∫',
        author: '–ö–µ–Ω—Ç–∞—Ä–æ –ú—ñ—É—Ä–∞',
        price: 499.99,
        description: '–ü–æ—Ö–º—É—Ä–µ —Ñ–µ–Ω—Ç–µ–∑—ñ –ø—Ä–æ –≤–æ—ó–Ω–∞-–æ–¥–∏–Ω–∞–∫–∞ –Ω–∞ —ñ–º\'—è –ì–∞—Ç—Å.',
        image_url: 'https://img.yani.tv/posters/full/1636671122.jpg',
        genre: '–î–∞—Ä–∫ –§–µ–Ω—Ç–µ–∑—ñ',
        volumes: 41,
        rating: 5.0
    },
    {
        id: '6',
        title: '–í–∞–Ω –ü—ñ—Å',
        author: '–ï–π—ñ—á—ñ—Ä–æ –û–¥–∞',
        price: 289.99,
        description: '–ü—Ä–∏–≥–æ–¥–∏ –ø—ñ—Ä–∞—Ç—Å—å–∫–æ—ó –∫–æ–º–∞–Ω–¥–∏ —É –ø–æ—à—É–∫–∞—Ö –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ —Å–∫–∞—Ä–±—É.',
        image_url: 'https://jut-su.net/uploads/mini/350x450/ab/1603122714_poster.webp',
        genre: '–ü—Ä–∏–≥–æ–¥–∏',
        volumes: 108,
        rating: 4.8
    },
    {
        id: '7',
        title: '–°–µ–π–ª–æ—Ä –ú—É–Ω',
        author: '–ù–∞–æ–∫–æ –¢–∞–∫–µ—É—á—ñ',
        price: 259.99,
        description: '–Ü—Å—Ç–æ—Ä—ñ—è –ø—Ä–æ –¥—ñ–≤—á–∏–Ω–∫—É, —è–∫–∞ —Å—Ç–∞—î —á–∞—Ä—ñ–≤–Ω–æ—é –≤–æ—ó—Ç–µ–ª—å–∫–æ—é –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –ó–µ–º–ª—ñ.',
        image_url: 'https://img.yani.tv/posters/full/1636667461.jpg',
        volumes: 18,
        rating: 4.5
    },
    {
        id: '8',
        title: '–•–µ–ª–ª—Å–∏–Ω–≥',
        author: '–ö–æ—Ç–∞ –•—ñ—Ä–∞–Ω–æ',
        price: 329.99,
        description: '–û–∫—É–ª—å—Ç–Ω–∏–π –±–æ–π–æ–≤–∏–∫ –ø—Ä–æ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—é, —â–æ –±–æ—Ä–µ—Ç—å—Å—è –∑ –Ω–∞–¥–ø—Ä–∏—Ä–æ–¥–Ω–∏–º–∏ –∑–∞–≥—Ä–æ–∑–∞–º–∏.',
        image_url: 'https://upload.wikimedia.org/wikipedia/ru/3/38/Hellsing_manga_vol1.jpg',
        genre: '–ñ–∞—Ö–∏',
        volumes: 10,
        rating: 4.7
    },
    {
        id: '9',
        title: '–ñ–æ–∂–æ',
        author: '–•—ñ—Ä–æ—Ö—ñ–∫–æ –ê—Ä–∞–∫—ñ',
        price: 369.99,
        description: '–°–µ—Ä—ñ—è –ø—Ä–æ –ø—Ä–∏–≥–æ–¥–∏ —Ä—ñ–∑–Ω–∏—Ö –ø–æ–∫–æ–ª—ñ–Ω—å —Ä–æ–¥–∏–Ω–∏ –î–∂–æ—Å—Ç–∞—Ä—ñ–≤, —â–æ –±–æ—Ä—é—Ç—å—Å—è –∑—ñ –∑–ª–æ–º.',
        image_url: 'https://upload.wikimedia.org/wikipedia/ru/thumb/c/cd/JoJos_Bizarre_Adventure.jpg/960px-JoJos_Bizarre_Adventure.jpg',
        genre: '–ü—Ä–∏–≥–æ–¥–∏',
        volumes: 131,
        rating: 4.9
    }
];

// --- –í—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç –†–∞–º–µ–Ω ---
const ramenProduct = {
    id: 'ramen-01',
    title: '–§—ñ—Ä–º–æ–≤–∏–π –†–∞–º–µ–Ω "–°–∞–∫—É—Ä–∞"',
    price: 189.99,
    description: '–°–ø—Ä–∞–≤–∂–Ω—ñ–π —è–ø–æ–Ω—Å—å–∫–∏–π —Ä–∞–º–µ–Ω –∑ –∫—É—Ä–∫–æ—é, —è–π—Ü–µ–º —Ç–∞ —Å–≤—ñ–∂–∏–º–∏ –æ–≤–æ—á–∞–º–∏.',
    image_url: 'https://katana.ua/wp-content/uploads/2021/06/DSCF4553-min-1.png'
};

// --- Shared cart logic and other functionality ---

let cart = JSON.parse(localStorage.getItem('cart')) || [];
const cartSidebar = document.getElementById('cart-sidebar');
const cartItemsContainer = document.getElementById('cart-items');
const cartTotalPrice = document.getElementById('cart-total-price');
const cartCount = document.getElementById('cart-count');

const updateCartCount = () => {
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    cartCount.textContent = totalItems;
};

const getCart = () => cart;
const saveCart = () => {
    localStorage.setItem('cart', JSON.stringify(cart));
    updateCartCount();
};

const renderCart = () => {
    cartItemsContainer.innerHTML = '';
    let total = 0;

    if (cart.length === 0) {
        cartItemsContainer.innerHTML = '<p class="cart-empty-message">–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π üòî</p>';
    } else {
        cart.forEach(item => {
            const li = document.createElement('li');
            li.classList.add('cart-item');
            li.innerHTML = `
                <img src="${item.image_url}" alt="${item.title}" class="cart-item-image">
                <div class="cart-item-info">
                    <span class="cart-item-title">${item.title}</span>
                    <span class="cart-item-price">${item.price.toFixed(2)} ‚Ç¥</span>
                </div>
                <div class="cart-item-actions">
                    <button class="cart-item-quantity-btn" data-id="${item.id}" data-action="decrease">-</button>
                    <span class="cart-item-quantity">${item.quantity}</span>
                    <button class="cart-item-quantity-btn" data-id="${item.id}" data-action="increase">+</button>
                    <button class="cart-item-remove-btn" data-id="${item.id}">&times;</button>
                </div>
            `;
            cartItemsContainer.appendChild(li);
            total += item.price * item.quantity;
        });
    }

    cartTotalPrice.textContent = total.toFixed(2);
    updateCartCount();
};

const addToCart = (product) => {
    const existingItem = cart.find(item => item.id === product.id);
    if (existingItem) {
        existingItem.quantity += 1;
    } else {
        cart.push({ ...product, quantity: 1 });
    }
    saveCart();
    renderCart();
};

const updateQuantity = (id, newQuantity) => {
    const item = cart.find(item => item.id === id);
    if (item) {
        if (newQuantity <= 0) {
            cart = cart.filter(item => item.id !== id);
        } else {
            item.quantity = newQuantity;
        }
    }
    saveCart();
    renderCart();
};

// --- Checkout Modal Logic ---
const modal = document.getElementById('checkout-modal');
const modalFormContainer = document.getElementById('modal-form-container');
const modalConfirmation = document.getElementById('modal-confirmation');
const modalOrderSummaryContainer = document.getElementById('modal-order-summary');
const modalTotalPrice = document.getElementById('modal-total-price');
const modalCloseBtn = document.getElementById('modal-close-btn');
const modalCloseAfterBtn = document.getElementById('modal-close-after-btn');
const originalFormParent = () => document.querySelector('.cart-checkout-form') || null;

const moveFormToModal = () => {
    const form = document.getElementById('checkout-form');
    if (!form || !modalFormContainer) return;
    modalFormContainer.appendChild(form);
};

const moveFormBack = () => {
    const form = document.getElementById('checkout-form');
    const origParent = originalFormParent();
    if (!form || !origParent) return;
    origParent.appendChild(form);
};

const renderModalOrderSummary = () => {
    if (!modalOrderSummaryContainer || !modalTotalPrice) return;

    modalOrderSummaryContainer.innerHTML = '';
    let total = 0;

    if (cart.length === 0) {
        modalOrderSummaryContainer.innerHTML = '<p>–ù–µ–º–∞—î —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.</p>';
    } else {
        cart.forEach(item => {
            const summaryItem = document.createElement('div');
            summaryItem.className = 'summary-item';
            summaryItem.innerHTML = `
                <img src="${item.image_url}" alt="${item.title}" class="summary-item-image">
                <div class="summary-item-info">
                    <div class="summary-item-title">${item.title}</div>
                    <div class="summary-item-details">–ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${item.quantity}</div>
                </div>
                <div class="summary-item-price">${(item.price * item.quantity).toFixed(2)} ‚Ç¥</div>
            `;
            modalOrderSummaryContainer.appendChild(summaryItem);
            total += item.price * item.quantity;
        });
    }

    modalTotalPrice.textContent = `${total.toFixed(2)} ‚Ç¥`;
};

const showCheckoutForm = () => {
    if (cart.length === 0) {
        alert('–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π!');
        return;
    }
    
    if (modalConfirmation) {
        modalConfirmation.classList.remove('active');
        modalConfirmation.setAttribute('aria-hidden', 'true');
    }
    if (modal.querySelector('.modal-body')) {
        modal.querySelector('.modal-body').style.display = 'flex';
    }
    
    renderModalOrderSummary();
    moveFormToModal();
    
    if (modal) {
        modal.classList.add('active');
        modal.setAttribute('aria-hidden', 'false');
    }
};

const hideCheckoutForm = () => {
    if (modal) {
        modal.classList.remove('active');
        modal.setAttribute('aria-hidden', 'true');
    }
    moveFormBack();
};

const confirmOrder = () => {
    const form = document.getElementById('checkout-form');
    if (form && form.checkValidity()) {
        if (modal.querySelector('.modal-body')) {
            modal.querySelector('.modal-body').style.display = 'none';
        }
        if (modalConfirmation) {
            modalConfirmation.classList.add('active');
            modalConfirmation.setAttribute('aria-hidden', 'false');
        }
        
        cart = [];
        saveCart();
        renderCart();
        
        setTimeout(moveFormBack, 500);

        setTimeout(() => {
            if (modal && modal.classList.contains('active')) {
                hideCheckoutForm();
            }
        }, 3500);
    } else {
        if (form) form.reportValidity();
    }
};

const openCart = () => {
	if (cartSidebar && !cartSidebar.classList.contains('active')) {
		cartSidebar.classList.add('active');
	}
};
const closeCart = () => {
	if (cartSidebar && cartSidebar.classList.contains('active')) {
		cartSidebar.classList.remove('active');
		hideCheckoutForm();
	}
};
const toggleCartSidebar = () => {
	if (!cartSidebar) return;
	cartSidebar.classList.toggle('active');
	if (!cartSidebar.classList.contains('active')) {
		hideCheckoutForm();
	}
};

window.openCart = openCart;
window.closeCart = closeCart;
window.toggleCartSidebar = toggleCartSidebar;

function initListeners() {
    const cartToggleBtn = document.getElementById('cart-toggle-btn');
    const cartCloseBtn = document.querySelector('.cart-close-btn');
    const scrollToTopBtn = document.getElementById('scrollToTopBtn');
    const checkoutForm = document.getElementById('checkout-form');

    if (cartToggleBtn) cartToggleBtn.addEventListener('click', toggleCartSidebar);
    if (cartCloseBtn) cartCloseBtn.addEventListener('click', toggleCartSidebar);

	if (themeToggleBtn) {
		themeToggleBtn.addEventListener('click', toggleTheme);
	}

    if (cartSidebar) {
        cartSidebar.addEventListener('click', (e) => {
            const btn = e.target.closest('button');
            if (!btn) return;

            const id = btn.dataset.id;
            const action = btn.dataset.action;

            if (btn.classList.contains('cart-item-remove-btn')) {
                cart = cart.filter(item => item.id !== id);
                saveCart();
                renderCart();
            } else if (action === 'increase') {
                const item = getCart().find(item => item.id === id);
                if (item) updateQuantity(id, item.quantity + 1);
            } else if (action === 'decrease') {
                const item = getCart().find(item => item.id === id);
                if (item) updateQuantity(id, item.quantity - 1);
            } else if (btn.classList.contains('checkout-btn')) {
                showCheckoutForm();
            }
        });
    }

    document.body.addEventListener('change', (e) => {
        if (e.target.matches('.payment-options input[type="radio"]')) {
            document.querySelectorAll('.payment-options label').forEach(label => label.classList.remove('selected'));
            e.target.closest('label').classList.add('selected');
        }
    });

    if (modalCloseBtn) modalCloseBtn.addEventListener('click', hideCheckoutForm);
    if (modalCloseAfterBtn) modalCloseAfterBtn.addEventListener('click', hideCheckoutForm);
    if (modal) {
        modal.addEventListener('click', (e) => {
            if (e.target.matches('[data-modal-close]')) {
                hideCheckoutForm();
            }
        });
    }

    window.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && modal && modal.classList.contains('active')) {
            hideCheckoutForm();
        }
    });

    if (checkoutForm) {
        checkoutForm.addEventListener('submit', (e) => {
            e.preventDefault();
            confirmOrder();
        });
    }

    window.addEventListener('scroll', () => {
        const header = document.getElementById('header');
        if (header) {
            header.classList.toggle('scrolled', window.scrollY > 50);
        }
        if (scrollToTopBtn) {
            scrollToTopBtn.classList.toggle('visible', window.scrollY > 300);
        }
    });

    if (scrollToTopBtn) {
        scrollToTopBtn.addEventListener('click', () => {
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });
    }

    // --- NEW: Ramen Modal Logic ---
    const tryRamenBtn = document.querySelector('#ramen-section .cta-button');
    const ramenModal = document.getElementById('ramen-modal');

    if (tryRamenBtn && ramenModal) {
        const brewingStage = document.getElementById('ramen-brewing-stage');
        const orderStage = document.getElementById('ramen-order-stage');
        const confirmStage = document.getElementById('ramen-confirm-stage');
        const orderBtn = document.getElementById('ramen-order-btn');

        const showRamenStage = (stageToShow) => {
            [brewingStage, orderStage, confirmStage].forEach(stage => {
                stage.classList.remove('active');
            });
            stageToShow.classList.add('active');
        };

        const openRamenModal = () => {
            ramenModal.classList.add('active');
            ramenModal.setAttribute('aria-hidden', 'false');
            showRamenStage(brewingStage);

            // –°–∏–º—É–ª—è—Ü—ñ—è —á–∞—Å—É –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è (3 —Å–µ–∫—É–Ω–¥–∏)
            setTimeout(() => {
                showRamenStage(orderStage);
            }, 3000);
        };

        const closeRamenModal = () => {
            ramenModal.classList.remove('active');
            ramenModal.setAttribute('aria-hidden', 'true');
        };

        tryRamenBtn.addEventListener('click', (e) => {
            e.preventDefault();
            openRamenModal();
        });

        ramenModal.addEventListener('click', (e) => {
            if (e.target.matches('[data-ramen-modal-close]')) {
                closeRamenModal();
            }
        });

        orderBtn.addEventListener('click', () => {
            addToCart(ramenProduct);
            showRamenStage(confirmStage);

            // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª–∫—É —Ä–∞–º–µ–Ω—É —ñ –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∫–æ—à–∏–∫ –∑ –æ–ø–ª–∞—Ç–æ—é
            setTimeout(() => {
                closeRamenModal();
                showCheckoutForm(); 
            }, 2000);
        });
    }
}

function initAnimations() {
    const revealElements = document.querySelectorAll('.reveal');
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible');
                observer.unobserve(entry.target);
            }
        });
    }, { threshold: 0.1 });
    revealElements.forEach(element => observer.observe(element));
}

function initMangaPage() {
    const mangaGrid = document.getElementById('manga-grid');
    if (!mangaGrid) return;

    const catalogSearch = document.getElementById('catalog-search');
    const sortBy = document.getElementById('sort-by');

    const renderManga = (mangaItems) => {
        mangaGrid.innerHTML = '';
        mangaItems.forEach(item => {
            const card = document.createElement('div');
            card.className = 'product-card';
            card.innerHTML = `
                <img src="${item.image_url}" alt="${item.title}" class="product-image">
                <div class="card-content">
                    <h3 class="card-title">${item.title}</h3>
                    <p class="card-detail">${item.author}</p>
                    <p class="card-price">${item.price.toFixed(2)} ‚Ç¥</p>
                    <button class="add-to-cart-btn" data-id="${item.id}">–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button>
                </div>
            `;
            mangaGrid.appendChild(card);
        });
    };

    const filterAndSortManga = () => {
        const query = catalogSearch.value.toLowerCase();
        const sortValue = sortBy.value;

        let filtered = mangaData.filter(manga => 
            manga.title.toLowerCase().includes(query) ||
            manga.author.toLowerCase().includes(query)
        );

        if (sortValue === 'price-asc') filtered.sort((a, b) => a.price - b.price);
        if (sortValue === 'price-desc') filtered.sort((a, b) => b.price - a.price);

        renderManga(filtered);
    };
    
    mangaGrid.addEventListener('click', (e) => {
        const btn = e.target.closest('.add-to-cart-btn');
        if (btn) {
            const id = btn.dataset.id;
            const product = mangaData.find(item => item.id === id);
            if (product) {
                addToCart(product);
                openCart();
            }
        }
    });

    catalogSearch.addEventListener('input', filterAndSortManga);
    sortBy.addEventListener('change', filterAndSortManga);

    filterAndSortManga();
}

// --- Theme (light/dark) logic ---
const themeToggleBtn = document.getElementById('theme-toggle-btn');

const applyTheme = (theme) => {
	if (theme === 'dark') {
		document.documentElement.setAttribute('data-theme', 'dark');
		if (themeToggleBtn) themeToggleBtn.textContent = '‚òÄÔ∏è';
	} else {
		document.documentElement.removeAttribute('data-theme');
		if (themeToggleBtn) themeToggleBtn.textContent = 'üåô';
	}
	localStorage.setItem('theme', theme === 'dark' ? 'dark' : 'light');
};

const toggleTheme = () => {
	const current = localStorage.getItem('theme') === 'dark' ? 'dark' : 'light';
	const next = current === 'dark' ? 'light' : 'dark';
	applyTheme(next);
};
window.toggleTheme = toggleTheme;

document.addEventListener('DOMContentLoaded', () => {
    const savedTheme = localStorage.getItem('theme') === 'dark' ? 'dark' : 'light';
    applyTheme(savedTheme);

    initListeners();
    initAnimations();
    renderCart();
    initMangaPage();
});